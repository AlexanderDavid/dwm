name: CI

on:
  push:
    tags:
    - 'dwm-ipc-*'

jobs:
  gen-patch-name:
    runs-on: ubuntu-latest
    outputs:
      patch-name: ${{ steps.gen-name.outputs.patch-name }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: unpatched

    - id: gen-name
      name: Generate patch name
      run: |
        tag="$(git tag --points-at=unpatched)"
        if [[ "$tags" != "" ]]; then
          echo "::set-output name=patch-name::dwm-ipc-${tag}.diff"
        else
          patch_date="$(date +%Y%m%d)"
          patch_hash="$(git rev-parse --short unpatched)"
          echo "::set-output name=patch-name::dwm-ipc-${patch_date}-${patch_hash}.diff"
        fi

  build:
    needs: gen-patch-name
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: unpatched

    - name: Create temporary branch
      run: git checkout -B temp

    - name: Squash commits
      run: git merge --squash origin/master

    - name: Set git username and email
      run: |
          git config user.email "$GIT_AUTHOR_EMAIL"
          git config user.name "$GITHUB_ACTOR"
      env:
        GIT_AUTHOR_EMAIL: mihirlad55@gmail.com

    - name: Make unified commit
      run: echo "$COMMIT_MESSAGE" | git commit -F -
      env:
        COMMIT_MESSAGE: |
          Add IPC support through a unix socket

          This patch currently supports the following requests:
          * Run custom commands with arguments (similar to key bind functions)
          * Get monitor properties
          * Get all available layouts
          * Get available tags
          * Get client properties
          * Subscribe to tag change, selected client change, and layout change
            events

          This patch includes a dwm-msg cli program that supports all of the
          above requests for easy integration into shell scripts.

          The messages are sent in a JSON format to promote integration to
          increase scriptability in languages like Python/JavaScript.

          The patch requires YAJL for JSON parsing and a system with epoll
          support. Portability is planned to be increased in the future.

          This patch is best applied after all other patches to avoid merge
          conflicts.

          For more info on the IPC implementation and how to send/receive
          messages, documentation can be found at
          https://github.com/mihirlad55/dwm-ipc

    - name: Install dependencies
      run: sudo apt-get install libx11-dev libyajl-dev libxinerama-dev

    - name: Compile
      run: make all

    - name: Generate patch
      run: git format-patch --stdout HEAD^ ':(exclude).github' > "$PATCH_NAME"
      env:
        PATCH_NAME: ${{ needs.gen-patch-name.outputs.patch-name }}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload patch asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/${{ needs.gen-patch-name.outputs.patch-name }}
        asset_name: ${{ needs.gen-patch-name.outputs.patch-name }}
        asset_content_type: text/plain

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ needs.gen-patch-name.outputs.patch-name }}
        path: ${{ github.workspace }}/${{ needs.gen-patch-name.outputs.patch-name }}
